' Gambas class file

Private db1 As New Connection
Public iBedSizeX As Integer 
Public iBedSizeY As Integer 
Public iMargin As Integer 
Public sInitialization As String
Public sHome As String 
Public sRapidMove As String 
Public iRapidPlane As Integer 
Public sSetBedTemp As String 
Public sBedTempPrefix As String 
Public sgBedTemp As Single 
Public sgShim As Single 
Public sPort As String 
Public iBaud As Integer
Public iDataBits As Integer
Public iStopBits As Integer
Public sParity As String
Public sFlowControl As String

Public Sub SerialPort3D_Read()

  Dim strReceived As String
   
  Try Read #SerialPort3D, strReceived, Lof(SerialPort3D)
  If Error Then
    strReceived = ""
  Else
    TextArea1.Text = TextArea1.Text & strReceived
  Endif

  Catch
    Me.Text = Error.Text

End

Public Sub SendSerialData(strMessage As String, blnLF As Boolean)

  If blnLF Then
    strMessage &= gb.Lf
  Endif
  SerialPort3D.Begin()
  Write #SerialPort3D, strMessage
  SerialPort3D.Send()

  Catch
    Me.Text = Error.Text
End

Public Sub Form_Open()
Dim tbl As Table
Dim rs As Result

  'Check if ~/.config/leveller/config.sqlite exists
  If Exist(User.Home & "/.config/leveller/config.sqlite") == False Then
    'Config is missing check if ~/.config/leveller directory exists
    If Exist(User.Home & "/.config/leveller") == False Then
      'Config directory missing, create it
      Mkdir User.Home & "/.config/leveller"
    Endif
    'Create config file and populate it standard values
    With db1
      .Type = "sqlite"
      .Host = User.Home & "/.config/leveller"
      .name = ""
      .Open
      .Databases.Add("config.sqlite")
      .Close
      .Name = "config.sqlite"
      .Open
        tbl = .Tables.Add("settings")
        tbl.Fields.Add("name", db.String, 10)
        tbl.Fields.Add("value", db.String, 10)
        tbl.PrimaryKey = ["name"]
        tbl.Update
      .Exec("INSERT INTO settings (name, value) VALUES(\"BedSizeX\",\"235\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"BedSizeY\",\"240\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"Margin\",\"30\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"Home\",\"G28\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"Init\",\"G21 G90 T0\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"RapidMove\",\"G0\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"RapidPlane\",\"10\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"SetBedTemp\",\"M140\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"BedTempPrefix\",\"S\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"BedTemp\",\"60\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"Shim\",\"0.2\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"Port\",\"/dev/ttyUSB0\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"Baud\",\"115200\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"DataBits\",\"8\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"StopBits\",\"1\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"Parity\",\"None\")")
      .Exec("INSERT INTO settings (name, value) VALUES(\"FlowControl\",\"None\")")
      .Close
    End With

  Endif
  
  'Open configuration database
  With db1
    .Type = "sqlite"
    .Host = User.Home & "/.config/leveller"
    .Name = "config.sqlite"
    .Open
  End With
  
  'Read settings
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"BedSizeX\"")
  rs.MoveFirst
  iBedSizeX = Val(rs!value)
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"BedSizeY\"")
  rs.MoveFirst
  iBedSizeY = Val(rs!value)
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"Margin\"")
  rs.MoveFirst
  iMargin = Val(rs!value)
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"Home\"")
  rs.MoveFirst
  sHome = rs!value
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"Init\"")
  rs.MoveFirst
  sInitialization = rs!value
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"RapidMove\"")
  rs.MoveFirst
  sRapidMove = rs!value
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"RapidPlane\"")
  rs.MoveFirst
  iRapidPlane = Val(rs!value)
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"SetBedTemp\"")
  rs.MoveFirst
  sSetBedTemp = rs!value
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"BedTempPrefix\"")
  rs.MoveFirst
  sBedTempPrefix = rs!value
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"BedTemp\"")
  rs.MoveFirst
  sgBedTemp = Val(rs!value)
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"Shim\"")
  rs.MoveFirst
  sgShim = rs!value
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"Port\"")
  rs.MoveFirst
  sPort = rs!value
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"Baud\"")
  rs.MoveFirst
  iBaud = Val(rs!value)
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"DataBits\"")
  rs.MoveFirst
  iDataBits = Val(rs!value)
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"StopBits\"")
  rs.MoveFirst
  iStopBits = Val(rs!value)
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"Parity\"")
  rs.MoveFirst
  sParity = rs!value
  rs = db1.Exec("SELECT * FROM settings WHERE name=\"FlowControl\"")
  rs.MoveFirst
  sFlowControl = rs!value
  db1.Close
  
  With SerialPort3D
    .PortName = sPort
    .Speed = iBaud
    .DataBits = iDataBits
    .StopBits = iStopBits
    Select sParity
      Case "None"
        .Parity = SerialPort.None
      Case "Odd"
        .Parity = SerialPort.Odd
      Case "Event"
        .Parity = SerialPort.Even
    End Select
    Select sFlowControl
      Case "None"
        .FlowControl = SerialPort.None
      Case "Hardware"
        .FlowControl = SerialPort.Hardware
      Case "Software"
        .FlowControl = SerialPort.Software
      Case "Both"
        .FlowControl = SerialPort.Both
    End Select
  End With
  
  Try serialPort3D.Open()
  If Error Then
    Message.Warning("Printer not found.  Check settings/connection and try again.")
    FSettings.Show
   Else
    btnHome.Enabled = True
  Endif
 
End

Public Sub Form_Close()
 
  'Turn off heated bed prior to exiting program
  SendSerialData(sSetBedTemp & sBedTempPrefix & "0.0", True)
  SerialPort3D.Close()
 
End

Public Sub btnHome_Click()

  'sHome Printer
  SendSerialData(Chr$(13), True)    'First communication sometimes results in error.  Sending a blank line lets this fault occure on this non-critial line.
  SendSerialData(sInitialization, True)
  SendSerialData(sHome, True)
  btLoc1.Enabled = True
  btnLoc2.Enabled = True
  btnLoc3.Enabled = True
  btnLoc4.Enabled = True
  btnLoc5.Enabled = True
  tgbBed.Enabled = True

End

Public Sub btLoc1_Click()

  'Move to -X,+Y position
  SendSerialData(sRapidMove & "Z" & iRapidPlane, True)
  SendSerialData(sRapidMove & "X" & iMargin & "Y" & (iBedSizeY - iMargin), True)
  SendSerialData(sRapidMove & "Z" & sgShim, True)

End

Public Sub btnLoc2_Click()

  'Move to +X,+Y position
  SendSerialData(sRapidMove & "Z" & iRapidPlane, True)
  SendSerialData(sRapidMove & "X" & (iBedSizeX - iMargin) & "Y" & (iBedSizeY - iMargin), True)
  SendSerialData(sRapidMove & "Z" & sgShim, True)

End

Public Sub btnLoc3_Click()

  'Move to -X,-Y position
  SendSerialData(sRapidMove & "Z" & iRapidPlane, True)
  SendSerialData(sRapidMove & "X" & iMargin & "Y" & iMargin, True)
  SendSerialData(sRapidMove & "Z" & sgShim, True)

End

Public Sub btnLoc4_Click()

  'Move to +X,-Y position
  SendSerialData(sRapidMove & "Z" & iRapidPlane, True)
  SendSerialData(sRapidMove & "X" & (iBedSizeX - iMargin) & "Y" & iMargin, True)
  SendSerialData(sRapidMove & "Z" & sgShim, True)

End

Public Sub btnSetting_Click()

  'Open Settings form
  FSettings.Show

End

Public Sub btnLoc5_Click()

  'Move to centre of the bed
  SendSerialData(sRapidMove & "Z" & iRapidPlane, True)
  SendSerialData(sRapidMove & "X" & (iBedSizeX / 2) & "Y" & (iBedSizeY / 2), True)
  SendSerialData(sRapidMove & "Z" & sgShim, True)

End

Public Sub TextArea1_Change()

  TextArea1.Pos = Len(TextArea1.Text)

End

Public Sub tgbBed_Click()

  If tgbBed.Value == True Then
    'Turn on heated bed
    SendSerialData(sSetBedTemp & sBedTempPrefix & sgBedTemp, True)
    tgbBed.Text = "Bed On"
  Else
    'Turn off heated bed
    SendSerialData(sSetBedTemp & sBedTempPrefix & "0.0", True)
    tgbBed.Text = "Bed Off"
  Endif

End



