' Gambas class file

Public Sub Run() As Boolean

  Return Not Me.ShowModal()

End

Public Sub btOK_Click()

  Dim hSettings As Settings
  Dim I As Integer

  'Check if Margin value is sane
  If (sbMargin.Value >= sbBedDepth.Value) Or (sbMargin.Value >= sbBedWidth.Value) Then 
    TabStrip1.Index = 0
    Message("Margin must be smaller then Bed Width and Bed Depth")
    Goto EndSub
  Endif
  
  'Check if a proper Axis Enable buttons are selected.
  'FIXME: Should only check if they are defined when Axis definition requests them.
  If ((cbXAxis.Index > 0) Or (cbYAxis.Index > 0) Or (cbZAxis.Index > 0) Or (cbEAxis.Index > 0)) And ((cbPrimeE.Index = 0) And (cbSecE.Index = 0)) Then
    TabStrip1.Index = 3
    Message("Must define Primary and Secondary enables when an axis is defined.")
    Goto EndSub
  Endif

  With FMain
    'Set settings
    .iBedSizeX = sbBedWidth.Value
    .iBedSizeY = sbBedDepth.Value
    .iMargin = sbMargin.Value
    .iRapidPlane = sbRapidPlane.Value
    .iCleanHeight = sbCleanHeight.Value
    .sCleanLoc = cbCleanLoc.Text
    .fRetraction = sbRetraction.Value
    .fShim = sbShim.Value
    .iBedTemp = sbBedTemperature.Value
    .iHETemp = sbHETemperature.Value
    .sPort = tbPort.Text
    .iBaud = Val(cbBaud.Text)
    .iDataBits = Val(cbDataBits.Text)
    .iStopBits = Val(cbStopBits.Text)
    .sParity = cbParity.Text
    .sFlowControl = cbFlowControl.Text
    .sInitialization[1] = tbInitialization1.Text
    .sInitialization[2] = tbInitialization2.Text
    .sInitialization[3] = tbInitialization3.Text
    .sHome = tbHome.Text
    .sRapidMove = tbRapid.Text
    .sLinearMove = tbLinear.Text
    .sSetBedTemp = tbSetBedTemp.Text
    .sBedTempPrefix = tbBedTempPrefix.Text
    .sSetHETemp = tbSetHETemp.Text
    .sHETempPrefix = tbHETempPrefix.Text
    .sGetTemperatures = tbGetTemperatures.Text
    .sGetPosition = tbGetPosition.Text
    .sDwell = tbDwell.Text
    .sMessage = tbMessage.Text
    .sAbsolute = tbAbsol.Text
    .sRelative = tbRelative.Text
    .iMaxJogSpeed = sbMaxJogSpeed.Value

    'Zero out Joystic axis mapping and repopulate
    For I = 0 To 13
      .iAxisMap[I] = 0
    Next
    .iAxisMap[cbXAxis.Index] = 1
    .iAxisMap[cbYAxis.Index] = 2
    .iAxisMap[cbZAxis.Index] = 3
    .iAxisMap[cbEAxis.Index] = 4

    'Zero out Joystick button mapping and repopulate
    For I = 0 To 13
      .iButtonMap[I] = 0
    Next 
    .iButtonMap[cbPrimeE.Index] = 1
    .iButtonMap[cbSecE.Index] = 2
    .iButtonMap[cbMicroM.Index] = 3
    .iButtonMap[cbExtruder.Index] = 4
    .iButtonMap[cbHeatedBed.Index] = 5
    .iButtonMap[cbHome.Index] = 6
    .iButtonMap[cbXnYn.Index] = 7
    .iButtonMap[cbXpYn.Index] = 8
    .iButtonMap[cbXnYp.Index] = 9
    .iButtonMap[cbXpYp.Index] = 10
    .iButtonMap[cbCentre.Index] = 11

    'Save settings to config
    hSettings = New Settings(.sConfigLoc &/ .sConfigName)

    hSettings["BedSize/BedSizeX"] = .iBedSizeX
    hSettings["BedSize/BedSizeY"] = .iBedSizeY

    hSettings["Post/Init1"] = .sInitialization[1]
    hSettings["Post/Init2"] = .sInitialization[2]
    hSettings["Post/Init3"] = .sInitialization[3]
    hSettings["Post/Home"] = .sHome
    hSettings["Post/RapidMove"] = .sRapidMove
    hSettings["Post/Linear"] = .sLinearMove
    hSettings["Post/SetBedTemp"] = .sSetBedTemp
    hSettings["Post/BedTempPrefix"] = .sBedTempPrefix
    hSettings["Post/SetHETemp"] = .sSetHETemp
    hSettings["Post/HETempPrefix"] = .sHETempPrefix
    hSettings["Post/GetTemperatures"] = .sGetTemperatures
    hSettings["Post/GetPosition"] = .sGetPosition
    hSettings["Post/Dwell"] = .sDwell
    hSettings["Post/Message"] = .sMessage
    hSettings["Post/Absolute"] = .sAbsolute
    hSettings["Post/Relative"] = .sRelative

    hSettings["Locations/Margin"] = .iMargin
    hSettings["Locations/RapidPlane"] = .iRapidPlane
    hSettings["Locations/Shim"] = .fShim
    hSettings["Locations/BedTemp"] = .iBedTemp
    hSettings["Locations/HETemp"] = .iHETemp
    hSettings["Locations/CleanHeight"] = .iCleanHeight
    hSettings["Locations/CleanLoc"] = .sCleanLoc
    hSettings["Locations/Retraction"] = .fRetraction
    hSettings["Locations/MaxJogSpeed"] = .iMaxJogSpeed
  
    hSettings["Communications/Port"] = .sPort
    hSettings["Communications/Baud"] = .iBaud
    hSettings["Communications/DataBits"] = .iDataBits
    hSettings["Communications/StopBits"] = .iStopBits
    hSettings["Communications/Parity"] = .sParity
    hSettings["Communications/FlowControl"] = .sFlowControl

    hSettings["System/FirstRun"] = False
    
    hSettings["Joystick/ButtonMap"] = .iButtonMap
    hSettings["Joystick/AxisMap"] = .iAxisMap

    'Write settings to disk early in case this is a First Run.
    hSettings.Save

    'Update location button text
    .UpdateButtonNames

    'Check if this is a First Run.  If so, re-initialize start up to get communitations working.
    If .bFirstRun = True Then 
      .bFirstRun = False
      .Form_Open()
    Endif

  End With

  Me.Close

  EndSub:

End

Public Sub btCancel_Click()

  Me.Close

End

Public Sub Form_Open()

  Dim sBaudRates As New String[7]
  Dim sCleanLoc As New String[4]
  Dim sDataBits As New String[2]
  Dim sStopBits As New String[3]
  Dim sParity As New String[3]
  Dim sFlowControls As New String[4]
  Dim sAxis As New String[13]
  Dim sButton As New String[13]
  Dim hSettings As Settings
  Dim I As Integer

  'Retrieve Setting form settings.
  hSettings = New Settings(FMain.sConfigLoc &/ FMain.sConfigName)
  hSettings.Read(Me, "SettingForm")

  'Fill in Combo Boxes
  sCleanLoc = ["Home", "Left", "Middle", "Right"]
  cbCleanLoc.List = sCleanLoc

  sBaudRates = ["1200", "2400", "4800", "9600", "28800", "57600", "115200"]
  cbBaud.List = sBaudRates

  sDataBits = ["7", "8"]
  cbDataBits.List = sDataBits

  sStopBits = ["1", "2", "3"]
  cbStopBits.List = sStopBits

  sParity = ["None", "Even", "Odd"]
  cbParity.List = sParity

  sFlowControls = ["None", "Hardware", "Software", "Both"]
  cbFlowControl.List = sFlowControls

  sAxis = ["- None -", 
           "Axis 0 + Prime", "Axis 1 + Prime", "Axis 2 + Prime", "Axis 3 + Prime", "Axis 4 + Prime", "Axis 5 + Prime", 
           "Axis 0 + Sec", "Axis 1 + Sec", "Axis 2 + Sec", "Axis 3 + Sec", "Axis 4 + Sec", "Axis 5 + Sec"]
  cbXAxis.List = sAxis
  cbYAxis.List = sAxis
  cbZAxis.List = sAxis
  cbEAxis.List = sAxis

  sButton = ["- None -", 
             "Button 0", "Button 1", "Button 2", "Button 3", "Button 4", "Button 5", "Button 6", 
             "Button 7", "Button 8", "Button 9", "Button 10", "Button 11", "Button 12"]
  cbPrimeE.List = sButton
  cbSecE.List = sButton
  cbMicroM.List = sButton
  cbExtruder.List = sButton
  cbHeatedBed.List = sButton
  cbHome.List = sButton
  cbXnYn.List = sButton
  cbXpYn.List = sButton
  cbXnYp.List = sButton
  cbXpYp.List = sButton
  cbCentre.List = sButton

  'Set the forms control values.
  With FMain
    sbBedWidth.Value = .iBedSizeX
    sbBedDepth.Value = .iBedSizeY
    sbMargin.Value = .iMargin
    sbRapidPlane.Value = .iRapidPlane
    sbShim.Value = .fShim
    sbBedTemperature.Value = .iBedTemp
    sbHETemperature.Value = .iHETemp
    sbCleanHeight.Text = .iCleanHeight
    cbCleanLoc.Text = .sCleanLoc
    sbRetraction.Value = .fRetraction
    tbPort.Text = .sPort
    cbBaud.Text = .iBaud
    cbDataBits.Text = .iDataBits
    cbStopBits.Text = .iStopBits
    cbParity.Text = .sParity
    cbFlowControl.Text = .sFlowControl
    tbInitialization1.Text = FMain.sInitialization[1]
    tbInitialization2.Text = FMain.sInitialization[2]
    tbInitialization3.Text = FMain.sInitialization[3]
    tbHome.Text = .sHome
    tbRapid.Text = .sRapidMove
    tbLinear.Text = .sLinearMove
    tbSetBedTemp.Text = .sSetBedTemp
    tbBedTempPrefix.Text = .sBedTempPrefix
    tbSetHETemp.Text = .sSetHETemp
    tbHETempPrefix.Text = .sHETempPrefix
    tbGetTemperatures.Text = .sGetTemperatures
    tbGetPosition.Text = .sGetPosition
    tbDwell.Text = .sDwell
    tbMessage.Text = .sMessage
    tbAbsol.Text = .sAbsolute
    tbRelative.Text = .sRelative
    sbMaxJogSpeed.Value = .iMaxJogSpeed
    For I = 0 To 13
      Select .iAxisMap[I]
        Case 1
          cbXAxis.Index = I
        Case 2
          cbYAxis.Index = I
        Case 3
          cbZAxis.Index = I
        Case 4
          cbEAxis.Index = I
      End Select
    Next
    For I = 0 To 13
      Select .iButtonMap[I]
        Case 1
          cbPrimeE.Index = I
        Case 2
          cbSecE.Index = I
        Case 3
          cbMicroM.Index = I
        Case 4
          cbExtruder.Index = I
        Case 5
          cbHeatedBed.Index = I
        Case 6
          cbHome.Index = I
        Case 7
          cbXnYn.Index = I
        Case 8
          cbXpYn.Index = I
        Case 9
          cbXnYp.Index = I
        Case 10
          cbXpYp.Index = I
        Case 11
          cbCentre.Index = I
      End Select
    Next
  End With

End

Public Sub Form_Close()

  Dim hSettings As Settings

  'Save Setting form settings.
  hSettings = New Settings(FMain.sConfigLoc &/ FMain.sConfigName)
  hSettings.Write(Me, "SettingForm")

End

Public Sub TabStrip1_Click()

  If TabStrip1.Index = 3 Then
    'disable Jog mode when adjusting joystick
    FMain.tgbjog.Value = False
  Endif

End

Public Sub cbAxis_Leave()

  Dim iIdx As Integer

  iIdx = Last.Index
  CheckDuplicateAxis(iIdx)

  Last.Index = iIdx

End

Public Sub cbBut_Leave()

  Dim iIdx As Integer

  iIdx = Last.Index
  CheckDuplicateButton(iIdx)
  Last.Index = iIdx

End

Public Sub CheckDuplicateAxis(Selection As Integer)
  
  If Selection > 0 Then
    If cbXAxis.Index = Selection Then
      cbXAxis.Index = 0
    Endif
    If cbYAxis.Index = Selection Then
      cbYAxis.Index = 0
    Endif
    If cbZAxis.Index = Selection Then
      cbZAxis.Index = 0
    Endif
    If cbEAxis.Index = Selection Then
      cbEAxis.Index = 0
    Endif
  Endif
  
End

Public Sub CheckDuplicateButton(Selection As Integer)

  If Selection > 0 Then
    If cbPrimeE.Index = Selection Then
      cbPrimeE.Index = 0
    Endif
    If cbSecE.Index = Selection Then
      cbSecE.Index = 0
    Endif
    If cbMicroM.Index = Selection Then
      cbMicroM.Index = 0
    Endif
    If cbExtruder.Index = Selection Then
      cbExtruder.Index = 0
    Endif
    If cbHeatedBed.Index = Selection Then
      cbHeatedBed.Index = 0
    Endif
    If cbHome.Index = Selection Then
      cbHome.Index = 0
    Endif
    If cbXnYn.Index = Selection Then
      cbXnYn.Index = 0
    Endif
    If cbXpYn.Index = Selection Then
      cbXpYn.Index = 0
    Endif
    If cbXnYp.Index = Selection Then
      cbXnYp.Index = 0
    Endif
    If cbXpYp.Index = Selection Then
      cbXpYp.Index = 0
    Endif
    If cbCentre.Index = Selection Then
      cbCentre.Index = 0
    Endif
  Endif
End
